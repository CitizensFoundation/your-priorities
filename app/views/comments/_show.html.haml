- if comment
  .row
    .large-1.columns
      %a{:name => comment.id}
      .comment_endorses{:id => "comment_#{comment.id.to_s}"}
        / Comment box
        = "&nbsp;".html_safe
        - unless first_comment
          = render :partial => "users/pic_50", :locals => {:user => comment.user}
    .large-11.columns
      - if comment.status == 'abusive'
        = tr("Comment deleted. The author received a warning for violating the <a href='/about/rules'>site rules</a>", "view/comments/_show")
      - else
        - unless first_comment
          = link_to(comment.user.login, comment.user)
          \- #{time_ago(comment.created_at)}
        - if user_signed_in? and current_user.id != comment.user_id
          = link_to image_tag("report.png", :align => "right", :border => 0, :class => "comment_report"),                                                              |
            flag_activity_comment_url(comment.activity_id,comment),:method => :get,                                                                                    |
            :remote=>true,                                                                                                                                             |
            'data-disable-with' => "",                                                                                                                                 |
            'data-loader-name' => "circle",                                                                                                                            |
            :confirm => tr("Is this comment from {user_name} a personal attack or a violation of the rules?", "view/comments/_show", :user_name => comment.user.name), |
            :title => tr("Report", "view/comments/_show")                                                                                                              |
        - if !defined? shortentext
          - shortentext="1"
        - if shortentext == 0
          .comment_content_2{:id => "comment_content_#{comment.id.to_s}", :class=> first_comment ? :first_comment : ""}
            - if comment.content_html
              = comment.content_html
            - else
              = comment.content
        - else
          .comment_content_2{:id => "comment_content_#{comment.id.to_s}", :class=> first_comment ? :first_comment : ""}
            - if comment.content_html
              = comment.content_html
            - else
              = comment.content
        - if user_signed_in? and not comment.removed? and ((@comments and comment == @comments.last and current_user.id == comment.user_id) or current_user.is_admin?)
          .delete-comment
            = link_to tr("delete", "view/comments/_show"), activity_comment_url(comment.activity_id,comment),                      |
              :method => :delete,                                                                                                  |
              :remote=>true,                                                                                                       |
              'data-disable-with' => escape_t(tr("Deleting","Ajax")),                                                              |
              'data-loader-name' => "horizontal_small",                                                                            |
              :confirm => tr("Remove this comment?", "view/comments/_show"), :title => tr("Delete comment", "view/comments/_show") |
        - else
          .delete-comment
            = "&nbsp;".html_safe
      = render :partial => "comments/flagged", :locals => {:comment => comment}
:javascript
  $(function() {
     jQuery("#{"#comment_content_#{comment.id}"}").truncate({maxLength: 400});
  });
